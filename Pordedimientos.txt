===============================================================================
Procedimiento para leer el archivo: asig_personal.tsv

create or replace
procedure leer_asig_personal is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  quinto_espacio number(3);
  sexto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  campo5 varchar2(1024);
  campo6 varchar2(1024);
  campo7 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'asig_personal.tsv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,'	',1,1),instr(v_linea,'	',1,2),
           instr(v_linea,'	',1,3),instr(v_linea,'	',1,4),
           instr(v_linea,'	',1,5),instr(v_linea,'	',1,6),
           LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio,quinto_espacio,sexto_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio)),
           SUBSTR(v_linea,(cuarto_espacio+1),(quinto_espacio-cuarto_espacio)),
           SUBSTR(v_linea,(quinto_espacio+1),(sexto_espacio-quinto_espacio)),
           SUBSTR(v_linea,(sexto_espacio+1),(tamaño-sexto_espacio))
    into campo1,campo2,campo3,campo4,campo5,campo6,campo7
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    dbms_output.put_line(campo5);
    dbms_output.put_line(campo6);
    dbms_output.put_line(campo7);
    dbms_output.put_line(v_linea);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: items.tsv

create or replace
procedure leer_Items is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  
begin
  v_archivo := utl_file.fopen ('PROYECT', 'items.tsv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,'	',1,1),instr(v_linea,'	',1,2),
           instr(v_linea,'	',1,3),LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio)),
           SUBSTR(v_linea,(tercer_espacio+1),(tamaño-tercer_espacio))
    into campo1,campo2,campo3,campo4
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: asig_tareas.csv

create or replace
procedure leer_asig_tareas is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'asig_tareas.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tamaño-segundo_espacio))
    into campo1,campo2,campo3
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(v_linea);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: asignarmaterial.csv

create or replace
procedure leer_asignarmaterial is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  campo5 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'asignarmaterial.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           instr(v_linea,';',1,3),instr(v_linea,';',1,4),
           LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1)),
           SUBSTR(v_linea,(cuarto_espacio+1),(tamaño-cuarto_espacio))
    into campo1,campo2,campo3,campo4,campo5
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    dbms_output.put_line(campo5);
    dbms_output.put_line(v_linea);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: items_historicos.csv

create or replace
procedure leer_items_historicos is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  quinto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  campo5 varchar2(1024);
  campo6 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'items_historicos.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           instr(v_linea,';',1,3),instr(v_linea,';',1,4),
           instr(v_linea,';',1,5),LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio,quinto_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1)),
           SUBSTR(v_linea,(cuarto_espacio+1),(quinto_espacio-cuarto_espacio-1)),
           SUBSTR(v_linea,(quinto_espacio+1),(tamaño-quinto_espacio))
    into campo1,campo2,campo3,campo4,campo5,campo6
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(v_linea);
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    dbms_output.put_line(campo5);
    dbms_output.put_line(campo6);
    
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: jefes.csv

create or replace
procedure leer_jefes is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  quinto_espacio number(3);
  sexto_espacio number(3);
  septimo_espacio number(3);
  octavo_espacio number(3);
  noveno_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  campo5 varchar2(1024);
  campo6 varchar2(1024);
  campo7 varchar2(1024);
  campo8 varchar2(1024);
  campo9 varchar2(1024);
  campo10 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'jefes.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           instr(v_linea,';',1,3),instr(v_linea,';',1,4),
           instr(v_linea,';',1,5),instr(v_linea,';',1,6),
           instr(v_linea,';',1,7),instr(v_linea,';',1,8),
           instr(v_linea,';',1,9),LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio,quinto_espacio,
         sexto_espacio,septimo_espacio,octavo_espacio,noveno_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1)),
           SUBSTR(v_linea,(cuarto_espacio+1),(quinto_espacio-cuarto_espacio-1)),
           SUBSTR(v_linea,(quinto_espacio+1),(sexto_espacio-quinto_espacio-1)),
           SUBSTR(v_linea,(sexto_espacio+1),(septimo_espacio-sexto_espacio-1)),
           SUBSTR(v_linea,(septimo_espacio+1),(octavo_espacio-septimo_espacio-1)),
           SUBSTR(v_linea,(octavo_espacio+1),(noveno_espacio-octavo_espacio-1)),
           SUBSTR(v_linea,(noveno_espacio+1),(tamaño-noveno_espacio))
    into campo1,campo2,campo3,campo4,campo5,campo6,campo7,campo8,campo9,campo10
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(v_linea);
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    dbms_output.put_line(campo5);
    dbms_output.put_line(campo6);
    dbms_output.put_line(campo7);
    dbms_output.put_line(campo8);
    dbms_output.put_line(campo9);
    dbms_output.put_line(campo10);
    
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: personas.csv

create or replace
procedure leer_personasCSV is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
  campo5 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'personas.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           instr(v_linea,';',1,3),instr(v_linea,';',1,4),
           LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1)),
           SUBSTR(v_linea,(cuarto_espacio+1),(tamaño-cuarto_espacio))
    into campo1,campo2,campo3,campo4,campo5
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(v_linea);
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    dbms_output.put_line(campo5);
    
    
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: servicios.csv

create or replace
procedure leer_servicios is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'servicios.csv', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,';',1,1),instr(v_linea,';',1,2),
           instr(v_linea,';',1,3),LENGTH(v_linea)
    into primer_espacio,segundo_espacio,tercer_espacio,tamaño
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,1,(primer_espacio-1)),
           SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(segundo_espacio+1),(tercer_espacio-segundo_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(tamaño-tercer_espacio-1))
    into campo1,campo2,campo3,campo4
	  FROM DUAL;
    
    --Campos separados--
    dbms_output.put_line(v_linea);
    dbms_output.put_line(campo1);
    dbms_output.put_line(campo2);
    dbms_output.put_line(campo3);
    dbms_output.put_line(campo4);
    
    
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: edificio.xml

create or replace
procedure leer_edificio is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'edificio.xml', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,'[',1,2),instr(v_linea,']',1,1),
           instr(v_linea,'"',1,1),instr(v_linea,'"',1,2)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1))
    into campo1,campo2
	  FROM DUAL;
    
    --Campos separados--
       dbms_output.put_line(campo2);
       dbms_output.put_line(campo1);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

===============================================================================
Procedimiento para leer el archivo: persona.xml y personas.xml

create or replace
procedure leer_persona is
  v_archivo utl_file.file_type;
  v_linea varchar2(1024);
  primer_espacio number(3);
  segundo_espacio number(3);
  tercer_espacio number(3);
  cuarto_espacio number(3);
  tamaño number(3);
  campo1 varchar2(1024);
  campo2 varchar2(1024);
  campo3 varchar2(1024);
  campo4 varchar2(1024);
begin
  v_archivo := utl_file.fopen ('PROYECT', 'persona.xml', 'r');
  loop
    utl_file.get_line (v_archivo,v_linea);
    
    --Consulta que me dice en dond se separara la cadena--
    SELECT instr(v_linea,'[',1,2),instr(v_linea,']',1,1),
           instr(v_linea,'"',1,1),instr(v_linea,'"',1,2)
    into primer_espacio,segundo_espacio,tercer_espacio,cuarto_espacio
	  FROM DUAL;
   
    --Consulta que separa los campos--
    SELECT SUBSTR(v_linea,(primer_espacio+1),(segundo_espacio-primer_espacio-1)),
           SUBSTR(v_linea,(tercer_espacio+1),(cuarto_espacio-tercer_espacio-1))
    into campo1,campo2
	  FROM DUAL;
    
    --Campos separados--
       dbms_output.put_line(campo2);
       dbms_output.put_line(campo1);
  end loop;
  utl_file.fclose(v_archivo); 

exception
  when no_data_found then
    dbms_output.put_line ('Fin del archivo');
end;

